version: 2
jobs:
  build:
    name: Build
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-{{ checksum "package.json" }}
          - cache-{{ .Environment.cache }}-dependencies

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-cli-{{ checksum "packages/cli/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-cli

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-core-{{ checksum "packages/lib-js-core/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-core

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-client-{{ checksum "packages/lib-js-client/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-client

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-validate-{{ checksum "packages/lib-js-validate/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-validate

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-test-{{ checksum "packages/lib-js-test/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-test

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-template-project-empty-{{ checksum "packages/template-project-empty/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-template-project-empty

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-template-project-hello-{{ checksum "packages/template-project-hello/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-template-project-hello

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-template-socket-es6-{{ checksum "packages/template-socket-es6/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-template-socket-es6

      - restore_cache:
          keys:
          - cache-{{ .Environment.cache }}-dependencies-test-tools-{{ checksum "packages/test-tools/package.json" }}
          - cache-{{ .Environment.cache }}-dependencies-test-tools

      - run: npm install
      - run: npm run bootstrap
      - run:
          command: npm install
          working_directory: ~/repo/packages/lib-js-client
      - run:
          command: npm run build
          working_directory: ~/repo/packages/lib-js-core

      - save_cache:
          paths:
            - node_modules
          key: cache-{{ .Environment.cache }}-dependencies-{{ checksum "package.json" }}

      - save_cache:
          paths:
            - packages/cli/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-cli-{{ checksum "packages/cli/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-core/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-core-{{ checksum "packages/lib-js-core/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-client/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-client-{{ checksum "packages/lib-js-client/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-validate/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-validate-{{ checksum "packages/lib-js-validate/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-test/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-test-{{ checksum "packages/lib-js-test/package.json" }}

      - save_cache:
          paths:
            - packages/template-project-empty/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-template-project-empty-{{ checksum "packages/template-project-empty/package.json" }}

      - save_cache:
          paths:
            - packages/template-project-hello/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-template-project-hello-{{ checksum "packages/template-project-hello/package.json" }}

      - save_cache:
          paths:
            - packages/template-socket-es6/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-template-socket-es6-{{ checksum "packages/template-socket-es6/package.json" }}

      - save_cache:
          paths:
            - packages/test-tools/node_modules
          key: cache-{{ .Environment.cache }}-dependencies-test-tools-{{ checksum "packages/test-tools/package.json" }}

      - save_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  test_unit:
    name: Unit Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:unit
      - run: npm run report:coverage

  test_e2e_validate:
    name: E2E Tests
    docker:
      - image: circleci/latest

    working_directory: ~/repo/packages/tests/

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:validate

  test_e2e_core:
    name: E2E Tests
    docker:
      - image: circleci/latest

    working_directory: ~/repo/packages/tests/

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:core

  test_e2e_client:
    name: E2E Client Tests
    docker:
      - image: circleci/latest

    working_directory: ~/repo/packages/tests/

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:client

  test_e2e_hosting:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:hosting

  # test_e2e_init:
  #   name: E2E Tests
  #   docker:
  #     - image: circleci/node:9.11.1
  #
  #   working_directory: ~/repo/packages/tests
  #
  #   steps:
  #     - restore_cache:
  #         key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
  #     - run: npm run test:e2e:cli:init

  test_e2e_socket:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:socket

  test_e2e_anonymous:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:anonymous

  test_e2e_instance:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:instance

  test_e2e_deploy:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:deploy

  test_e2e_config:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:cli:config

  test_e2e_schema:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/tests

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test:e2e:schema

  test_lint:
    name: Linter
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run lint

  deploy_docs:
    name: Deploying Docs
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: echo 'export SYNCANO_HOST=${PRODUCTION_SYNCANO_HOST}' >> $BASH_ENV
      - run: echo 'export SYNCANO_AUTH_KEY=${PRODUCTION_SYNCANO_AUTH_KEY}' >> $BASH_ENV
      - run: echo 'export SYNCANO_PROJECT_INSTANCE=syncano-docs-${CIRCLE_BRANCH}' >> $BASH_ENV
      - run: node packages/cli/lib/cli.js deploy
      - run: node packages/cli/lib/cli.js hosting sync docs
      - run: node packages/cli/lib/cli.js hosting config docs --cname ${CIRCLE_BRANCH}-docs.syncano.io
      - run: node packages/cli/lib/cli.js hosting sync cookbook
      - run: node packages/cli/lib/cli.js hosting config cookbook --cname ${CIRCLE_BRANCH}-cookbook.syncano.io
      - run: node packages/cli/lib/cli.js hosting sync cheatsheet
      - run: node packages/cli/lib/cli.js hosting config cheatsheet --cname ${CIRCLE_BRANCH}-cheatsheet.syncano.io

  publish:
    name: Publish packages to NPM
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npx npm-cli-login -u $NPM_USER -p $NPM_PASS -e $NPM_EMAIL -s syncano
      - run: npm run changelog
      - run: npx lerna publish --canary --yes

  codecov:
    name: Send Codecov report
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: cache-{{ .Environment.cache }}-repo-units-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run report:coverage

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test_lint:
          requires:
            - build
      - test_unit:
          requires:
            - build
      - test_e2e_validate:
          requires:
            - build
      - test_e2e_client:
          requires:
            - build
      - test_e2e_instance:
          requires:
            - build
      - test_e2e_deploy:
          requires:
            - build
      - test_e2e_config:
          requires:
            - build
      - test_e2e_anonymous:
          requires:
            - build
      - test_e2e_hosting:
          requires:
            - build
      - test_e2e_socket:
          requires:
            - build
      - test_e2e_core:
          requires:
            - build
      - test_e2e_schema:
          requires:
            - build
      - deploy_docs:
          requires:
            - build
            - test_e2e_instance
            - test_e2e_validate
            - test_e2e_client
            - test_e2e_socket
            - test_e2e_hosting
            - test_e2e_core
            - test_e2e_anonymous
            - test_e2e_config
            - test_e2e_deploy
            - test_e2e_schema
            - test_lint
            - test_unit
          filters:
            branches:
              only:
                - master
                - /\d/
      - publish:
          requires:
            - test_e2e_instance
            - test_e2e_validate
            - test_e2e_client
            - test_e2e_socket
            - test_e2e_hosting
            - test_e2e_core
            - test_e2e_anonymous
            - test_e2e_config
            - test_e2e_deploy
            - test_e2e_schema
            - test_lint
            - test_unit
          filters:
            branches:
              only: master
